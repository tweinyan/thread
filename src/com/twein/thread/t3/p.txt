线程安全性问题

* 多线程环境下
* 多个线程共享一个资源
* 对资源进行非原子性操作

Synchronized原理与应用

  * 内置锁
  * 互斥锁

  * 修饰普通方法
  * 修饰静态方法
  * 修饰代码块

* 任何对象都可以作为锁，那么锁信息又存在对象的什么地方呢？
  * 存在对象头中
* 对象头中的信息
  * Mark Word
  * Class Metadata Address
  * Array Length
* 偏向锁
  * 每次获取锁和释放锁会浪费资源
  * 很多情况下，竞争锁不是由多个线程，而是由一个线程在使用
  * Mark Word
    * 线程id
    * Epoch
    * 对象的分代年龄信息
    * 是否是偏向锁
    * 锁标志位
  * 只有一个线程在访问同步代码块的场景
* 轻量级锁
  * 自旋
  * 多个线程可以同时
* 重量级锁